[{"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Login\\index.tsx":"1","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\App.tsx":"2","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Input\\index.tsx":"3","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\index.tsx":"4","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\CaptureForms\\index.tsx":"5","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Navbar\\index.tsx":"6","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Sidebar\\index.tsx":"7","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\PageBody\\index.tsx":"8","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Schedule\\index.tsx":"9","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\ForgotPassword\\index.tsx":"10","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Dashboard\\index.tsx":"11","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\MailSent\\index.tsx":"12","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\CardCapForm\\index.tsx":"13"},{"size":3227,"mtime":1610571833413,"results":"14","hashOfConfig":"15"},{"size":365,"mtime":1609902065942,"results":"16","hashOfConfig":"15"},{"size":908,"mtime":1609776505260,"results":"17","hashOfConfig":"15"},{"size":198,"mtime":1609775787736,"results":"18","hashOfConfig":"15"},{"size":852,"mtime":1610602406419,"results":"19","hashOfConfig":"15"},{"size":508,"mtime":1610515171797,"results":"20","hashOfConfig":"15"},{"size":988,"mtime":1610515478683,"results":"21","hashOfConfig":"15"},{"size":1506,"mtime":1610517115695,"results":"22","hashOfConfig":"15"},{"size":1472,"mtime":1610516590540,"results":"23","hashOfConfig":"15"},{"size":3152,"mtime":1610584330661,"results":"24","hashOfConfig":"15"},{"size":5106,"mtime":1610082187184,"results":"25","hashOfConfig":"15"},{"size":3065,"mtime":1610584355882,"results":"26","hashOfConfig":"15"},{"size":773,"mtime":1610601068703,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1y0kmmx",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Login\\index.tsx",["61","62","63"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\App.tsx",[],["64","65"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Input\\index.tsx",[],["66","67"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\index.tsx",[],["68","69"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\CaptureForms\\index.tsx",["70","71","72","73"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Navbar\\index.tsx",["74"],"import React, { useRef } from 'react';\r\n\r\nimport logotipo from '../../assets/images/icons/logo-sm.png';\r\nimport imgPerfil from '../../assets/images/perfil.png';\r\n\r\nimport './styles.css';\r\n\r\n\r\nfunction Navbar() {\r\n\r\n  return (\r\n    <div className=\"navbar \">\r\n\r\n      <img src={logotipo} alt=\"logo-talkis\"/>\r\n\r\n      <div className=\"left-content\">\r\n        <label htmlFor=\"perfil\">Igor Sales</label>\r\n        <img src={imgPerfil} alt=\"img-perfil\"/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\Sidebar\\index.tsx",["75"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\PageBody\\index.tsx",["76"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Schedule\\index.tsx",[],["77","78"],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\ForgotPassword\\index.tsx",["79","80"],"import React, { useRef } from 'react';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport Input from '../../components/Input';\r\n// import SaveForm from '../../components/SaveForm';\r\n\r\n// import api from '../../services/api';\r\n// import { login } from '../../services/auth';\r\n// import { errorLogin } from '../../utils/Notifications';\r\n\r\nimport './styles.css';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport ForgotPasswordImg from '../../assets/images/forgot-password.svg';\r\n// import { User } from '../../store/modules/login/types';\r\n// import { setUser } from '../../store/modules/login/actions';\r\n// import { useDispatch } from 'react-redux';\r\n\r\n\r\ninterface LoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nfunction ForgotPassword() {\r\n\r\n  // const dispatch = useDispatch()\r\n  // const history = useHistory();\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const handleSubmit: SubmitHandler<LoginData> = async data => {\r\n\r\n    console.log('submit handle')\r\n    window.location.href='/mail-sent'\r\n    // try{\r\n    //   formRef.current?.setErrors({})\r\n\r\n    //   const schemaDoc = Yup.object().shape({        \r\n    //           username: Yup.string().required('Por favor, digite o nome de usuÃ¡rio'),\r\n    //           password: Yup.string().required('Por favor, digite a senha'),\r\n    //     })\r\n\r\n    //   await schemaDoc.validate(data, {\r\n    //     abortEarly: false,\r\n    //   })\r\n       \r\n    //   api.post('sessions/', data).then((response) =>{    \r\n    //     const userData: User = response.data;\r\n        \r\n    //     console.log(userData)\r\n\r\n    //     if(userData.token){\r\n    //       login(userData.token);\r\n    //       dispatch(setUser(userData));\r\n\r\n    //       history.push('/document');\r\n    //     }\r\n\r\n    //   }).catch((err) => {\r\n    //     errorLogin()\r\n    //   })\r\n\r\n    // }catch(err){\r\n    //   if(err instanceof Yup.ValidationError){\r\n    //       err.inner.forEach( error => {\r\n    //           formRef.current?.setFieldError(error.path, error.message)\r\n    //         }) \r\n    //   } \r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-forgot\">\r\n      <div className=\"forgot-header\">\r\n        <Link to=\"/login\">\r\n          <FaArrowLeft size={20}/>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"fortot-left\">\r\n        <img src={ForgotPasswordImg} alt=\"forgot-img\"/>\r\n      </div>\r\n\r\n      <div className=\"forgot-right\">\r\n          <div className=\"right-wrapper\">\r\n\r\n            <h1>Digite seu email abaixo para recuperar sua senha</h1>\r\n            \r\n            <Form onSubmit={handleSubmit} ref={formRef}>\r\n              <Input name=\"email\" label=\"Email\" placeholder=\"Digite seu e-mail\"></Input>\r\n              {/* <SaveForm title=\"Acessar\"/> */}\r\n              <div className=\"button-container\">\r\n                <button type=\"submit\" >Enviar</button>\r\n              </div>\r\n\r\n            </Form>\r\n            \r\n          </div>   \r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ForgotPassword;","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\Dashboard\\index.tsx",[],"C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\Pages\\MailSent\\index.tsx",["81","82","83","84","85","86"],"import React, { useRef } from 'react';\r\nimport { FormHandles, SubmitHandler } from '@unform/core';\r\nimport { Form } from '@unform/web';\r\nimport { Link } from 'react-router-dom';\r\nimport { useHistory } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\n\r\nimport Input from '../../components/Input';\r\n// import SaveForm from '../../components/SaveForm';\r\n\r\n// import api from '../../services/api';\r\n// import { login } from '../../services/auth';\r\n// import { errorLogin } from '../../utils/Notifications';\r\n\r\nimport './styles.css';\r\nimport { FaArrowLeft } from 'react-icons/fa';\r\nimport MailSentImg from '../../assets/images/mail-sent.svg';\r\n// import { User } from '../../store/modules/login/types';\r\n// import { setUser } from '../../store/modules/login/actions';\r\n// import { useDispatch } from 'react-redux';\r\n\r\n\r\ninterface LoginData {\r\n  username: string;\r\n  password: string;\r\n}\r\n\r\nfunction MailSent() {\r\n\r\n  // const dispatch = useDispatch()\r\n  // const history = useHistory();\r\n  const formRef = useRef<FormHandles>(null);\r\n\r\n  const handleSubmit: SubmitHandler<LoginData> = async data => {\r\n\r\n    console.log('submit handle')\r\n    // try{\r\n    //   formRef.current?.setErrors({})\r\n\r\n    //   const schemaDoc = Yup.object().shape({        \r\n    //           username: Yup.string().required('Por favor, digite o nome de usuÃ¡rio'),\r\n    //           password: Yup.string().required('Por favor, digite a senha'),\r\n    //     })\r\n\r\n    //   await schemaDoc.validate(data, {\r\n    //     abortEarly: false,\r\n    //   })\r\n       \r\n    //   api.post('sessions/', data).then((response) =>{    \r\n    //     const userData: User = response.data;\r\n        \r\n    //     console.log(userData)\r\n\r\n    //     if(userData.token){\r\n    //       login(userData.token);\r\n    //       dispatch(setUser(userData));\r\n\r\n    //       history.push('/document');\r\n    //     }\r\n\r\n    //   }).catch((err) => {\r\n    //     errorLogin()\r\n    //   })\r\n\r\n    // }catch(err){\r\n    //   if(err instanceof Yup.ValidationError){\r\n    //       err.inner.forEach( error => {\r\n    //           formRef.current?.setFieldError(error.path, error.message)\r\n    //         }) \r\n    //   } \r\n    // }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-mail\">\r\n      <div className=\"mail-header\">\r\n        <Link to=\"/forgot-password\">\r\n          <FaArrowLeft size={20}/>\r\n        </Link>\r\n      </div>\r\n\r\n      <div className=\"mail-left\">\r\n        <div className=\"right-wrapper\">\r\n\r\n          <h1>O email foi enviado!</h1>\r\n          <p>Por favor, abra sua caixa de entrada e clique no link \r\n            recebido para alterar sua senha, caso nÃ£o tenha encontrado,\r\n            verifique a lixeira ou caixa de spam.\r\n          </p>\r\n\r\n\r\n          <div className=\"button-container\">\r\n            <span>NÃ£o recebeu o email?</span>\r\n            <button type=\"submit\" >Enviar novamente</button>\r\n          </div>\r\n\r\n        </div>   \r\n\r\n      </div>\r\n\r\n      <div className=\"mail-right\">\r\n        <img src={MailSentImg} alt=\"forgot-img\"/>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default MailSent;","C:\\Workspace\\Work\\ACUTIS\\Talkis\\talkis-web\\src\\components\\CardCapForm\\index.tsx",[],{"ruleId":"87","severity":1,"message":"88","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"92","severity":1,"message":"93","line":91,"column":39,"nodeType":"94","endLine":91,"endColumn":50},{"ruleId":"95","replacedBy":"96"},{"ruleId":"97","replacedBy":"98"},{"ruleId":"95","replacedBy":"99"},{"ruleId":"97","replacedBy":"100"},{"ruleId":"95","replacedBy":"101"},{"ruleId":"97","replacedBy":"102"},{"ruleId":"87","severity":1,"message":"103","line":2,"column":10,"nodeType":"89","messageId":"90","endLine":2,"endColumn":15},{"ruleId":"87","severity":1,"message":"104","line":2,"column":17,"nodeType":"89","messageId":"90","endLine":2,"endColumn":31},{"ruleId":"87","severity":1,"message":"105","line":2,"column":33,"nodeType":"89","messageId":"90","endLine":2,"endColumn":41},{"ruleId":"87","severity":1,"message":"106","line":2,"column":43,"nodeType":"89","messageId":"90","endLine":2,"endColumn":56},{"ruleId":"87","severity":1,"message":"107","line":1,"column":17,"nodeType":"89","messageId":"90","endLine":1,"endColumn":23},{"ruleId":"87","severity":1,"message":"108","line":5,"column":8,"nodeType":"89","messageId":"90","endLine":5,"endColumn":21},{"ruleId":"87","severity":1,"message":"109","line":6,"column":8,"nodeType":"89","messageId":"90","endLine":6,"endColumn":15},{"ruleId":"95","replacedBy":"110"},{"ruleId":"97","replacedBy":"111"},{"ruleId":"87","severity":1,"message":"88","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"112","line":3,"column":10,"nodeType":"89","messageId":"90","endLine":3,"endColumn":14},{"ruleId":"87","severity":1,"message":"88","line":5,"column":10,"nodeType":"89","messageId":"90","endLine":5,"endColumn":20},{"ruleId":"87","severity":1,"message":"91","line":6,"column":13,"nodeType":"89","messageId":"90","endLine":6,"endColumn":16},{"ruleId":"87","severity":1,"message":"113","line":8,"column":8,"nodeType":"89","messageId":"90","endLine":8,"endColumn":13},{"ruleId":"87","severity":1,"message":"114","line":32,"column":9,"nodeType":"89","messageId":"90","endLine":32,"endColumn":16},{"ruleId":"87","severity":1,"message":"115","line":34,"column":9,"nodeType":"89","messageId":"90","endLine":34,"endColumn":47},"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar","'Yup' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["116"],"no-negated-in-lhs",["117"],["116"],["117"],["116"],["117"],"'FaPen' is defined but never used.","'FaRegClipboard' is defined but never used.","'FaRegEye' is defined but never used.","'FaRegTrashAlt' is defined but never used.","'useRef' is defined but never used.","'DashboardIcon' is defined but never used.","'addIcon' is defined but never used.",["116"],["117"],"'Form' is defined but never used.","'Input' is defined but never used.","'formRef' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]